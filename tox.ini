; NOTE: We're gradually replacing tox with nox. See noxfile.py instead.

[tox]
minversion=4.5.1
envlist=greet

[testenv]
package=wheel
wheel_build_env=.pkg
setenv=
    PIP_EXTRA_INDEX_URL=https://download.pytorch.org/whl/cpu
    PIP_TIMEOUT=600

[testenv:.pkg]
setenv=
    WANDB_BUILD_COVERAGE=true
    WANDB_BUILD_GORACEDETECT=true
    WANDB_BUILD_UNIVERSAL=false

[testenv:greet]
skip_install=true
commands=
    python -c "print('\nGreetings, wandb developer!\\nTo execute a tox environment, run `tox run -e <envname>`\n')"

[base]
deps=
    -r{toxinidir}/requirements_dev.txt
setenv=
    ; Setting low network buffer so that we exercise flow control logic
    WANDB__NETWORK_BUFFER=1000
    COVERAGE_FILE={envdir}/.coverage
    YEA_WANDB_VERSION=0.9.20
    WANDB_ERROR_REPORTING=false
passenv=
    USERNAME
    CI_PYTEST_SPLIT_ARGS

[testenv:{,importer-wandb-,importer-mlflow-}py{37,38,39,310,311,312}]
deps=
    {[base]deps}
    !py37-!mlflow: .[workspaces]
    !py37-!mlflow: polyfactory
    wheel
    build
    nox
    importer-mlflow: pydantic<2
    importer-wandb: pydantic>=2
    importer: polars<=1.2.1
    importer: rich
    importer: filelock
setenv=
    {[base]setenv}
    WINDIR=C:\\Windows
    GOCOVERDIR={tox_root}/.coverage
passenv=
    {[base]passenv}
    CI_PYTEST_PARALLEL
    CI
    importer-wandb: WANDB_TEST_SERVER_URL2
allowlist_externals=
    mkdir
    nox
    go
    cargo
commands_pre=
    mkdir -p test-results .coverage
commands=
    pytest {env:CI_PYTEST_SPLIT_ARGS:} -n=8 --durations=20 --junitxml=test-results/junit.xml --cov --cov-report=xml --no-cov-on-fail --timeout 300 {posargs}
commands_post=
    go tool covdata textfmt -i=.coverage -o coverage.txt

[testenv:launch-release]
deps=
    pytest
    wandb
    wandb[launch]
commands=
    wandb login
    pytest tests/release_tests/test_launch/ {posargs}
