# Generated by ariadne-codegen
# Source: core/api/graphql/schemas/schema-latest.graphql

from __future__ import annotations

from typing import Any, List, Optional

from pydantic import Field

from wandb._pydantic import GQLBase, GQLId


class ArtifactAliasInput(GQLBase):
    artifact_collection_name: str = Field(alias="artifactCollectionName")
    alias: str


class LinkArtifactInput(GQLBase):
    artifact_id: Optional[GQLId] = Field(alias="artifactID", default=None)
    artifact_portfolio_id: Optional[GQLId] = Field(
        alias="artifactPortfolioID", default=None
    )
    artifact_portfolio_name: Optional[str] = Field(
        alias="artifactPortfolioName", default=None
    )
    entity_name: Optional[str] = Field(alias="entityName", default=None)
    project_name: Optional[str] = Field(alias="projectName", default=None)
    aliases: Optional[List[ArtifactAliasInput]] = None
    client_id: Optional[GQLId] = Field(alias="clientID", default=None)
    client_mutation_id: Optional[str] = Field(alias="clientMutationId", default=None)


class ArtifactCollectionAliasInput(GQLBase):
    alias: str
    entity_name: str = Field(alias="entityName")
    project_name: str = Field(alias="projectName")
    artifact_collection_name: str = Field(alias="artifactCollectionName")


class TagInput(GQLBase):
    tag_category_name: Optional[str] = Field(alias="tagCategoryName", default=None)
    tag_name: str = Field(alias="tagName")
    attributes: Optional[Any] = None


LinkArtifactInput.model_rebuild()
