# Generated by ariadne-codegen
# Source: tools/graphql_codegen/artifacts/

from __future__ import annotations

from typing import Literal, Optional

from pydantic import Field

from wandb._pydantic import GQLBase, GQLId, Typename

from .fragments import ArtifactFragment


class ArtifactViaMembershipByName(GQLBase):
    project: Optional[ArtifactViaMembershipByNameProject]


class ArtifactViaMembershipByNameProject(GQLBase):
    artifact_collection_membership: Optional[
        ArtifactViaMembershipByNameProjectArtifactCollectionMembership
    ] = Field(alias="artifactCollectionMembership")


class ArtifactViaMembershipByNameProjectArtifactCollectionMembership(GQLBase):
    id: GQLId
    artifact_collection: Optional[
        ArtifactViaMembershipByNameProjectArtifactCollectionMembershipArtifactCollection
    ] = Field(alias="artifactCollection")
    artifact: Optional[ArtifactFragment]


class ArtifactViaMembershipByNameProjectArtifactCollectionMembershipArtifactCollection(
    GQLBase
):
    typename__: Typename[
        Literal["ArtifactCollection", "ArtifactPortfolio", "ArtifactSequence"]
    ]
    id: GQLId
    name: str
    project: Optional[
        ArtifactViaMembershipByNameProjectArtifactCollectionMembershipArtifactCollectionProject
    ]


class ArtifactViaMembershipByNameProjectArtifactCollectionMembershipArtifactCollectionProject(
    GQLBase
):
    id: GQLId
    entity_name: str = Field(alias="entityName")
    name: str


ArtifactViaMembershipByName.model_rebuild()
ArtifactViaMembershipByNameProject.model_rebuild()
ArtifactViaMembershipByNameProjectArtifactCollectionMembership.model_rebuild()
ArtifactViaMembershipByNameProjectArtifactCollectionMembershipArtifactCollection.model_rebuild()
