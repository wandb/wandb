# Generated by ariadne-codegen
# Source: tools/graphql_codegen/artifacts/

from __future__ import annotations

from typing import Literal, Optional, Union

from pydantic import Field
from typing_extensions import Annotated

from wandb._pydantic import GQLBase, Typename


class ArtifactCreatedBy(GQLBase):
    artifact: Optional[ArtifactCreatedByArtifact]


class ArtifactCreatedByArtifact(GQLBase):
    created_by: Optional[
        Annotated[
            Union[
                ArtifactCreatedByArtifactCreatedByRun,
                ArtifactCreatedByArtifactCreatedByUser,
            ],
            Field(discriminator="typename__"),
        ]
    ] = Field(alias="createdBy")


class ArtifactCreatedByArtifactCreatedByRun(GQLBase):
    typename__: Typename[Literal["Run"]]
    name: str
    project: Optional[ArtifactCreatedByArtifactCreatedByRunProject]


class ArtifactCreatedByArtifactCreatedByRunProject(GQLBase):
    name: str
    entity_name: str = Field(alias="entityName")


class ArtifactCreatedByArtifactCreatedByUser(GQLBase):
    typename__: Typename[Literal["User"]]


ArtifactCreatedBy.model_rebuild()
ArtifactCreatedByArtifact.model_rebuild()
ArtifactCreatedByArtifactCreatedByRun.model_rebuild()
