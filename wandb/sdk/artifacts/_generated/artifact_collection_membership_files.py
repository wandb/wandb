# Generated by ariadne-codegen
# Source: tools/graphql_codegen/artifacts/

from __future__ import annotations

from typing import Literal, Optional

from pydantic import Field

from wandb._pydantic import GQLResult, Typename

from .fragments import FilesFragment


class ArtifactCollectionMembershipFiles(GQLResult):
    project: Optional[ArtifactCollectionMembershipFilesProject]


class ArtifactCollectionMembershipFilesProject(GQLResult):
    artifact_collection: Optional[
        ArtifactCollectionMembershipFilesProjectArtifactCollection
    ] = Field(alias="artifactCollection")


class ArtifactCollectionMembershipFilesProjectArtifactCollection(GQLResult):
    typename__: Typename[
        Literal["ArtifactCollection", "ArtifactPortfolio", "ArtifactSequence"]
    ]
    artifact_membership: Optional[
        ArtifactCollectionMembershipFilesProjectArtifactCollectionArtifactMembership
    ] = Field(alias="artifactMembership")


class ArtifactCollectionMembershipFilesProjectArtifactCollectionArtifactMembership(
    GQLResult
):
    files: Optional[FilesFragment]


ArtifactCollectionMembershipFiles.model_rebuild()
ArtifactCollectionMembershipFilesProject.model_rebuild()
ArtifactCollectionMembershipFilesProjectArtifactCollection.model_rebuild()
ArtifactCollectionMembershipFilesProjectArtifactCollectionArtifactMembership.model_rebuild()
