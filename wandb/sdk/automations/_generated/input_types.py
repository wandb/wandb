# Generated by ariadne-codegen
# Source: core/api/graphql/schemas/schema-latest.graphql

from __future__ import annotations

from pydantic import Field, Json

from .base_model import BaseModel
from .enums import (
    AlertSeverity,
    EventTriggeringConditionType,
    TriggeredActionType,
    TriggerScopeType,
)


class QueueJobActionInput(BaseModel):
    queue_id: str = Field(alias="queueID")
    template: Json


class NotificationActionInput(BaseModel):
    integration_id: str = Field(alias="integrationID")
    title: str | None = None
    message: str | None = None
    severity: AlertSeverity | None = None


class GenericWebhookActionInput(BaseModel):
    integration_id: str = Field(alias="integrationID")
    request_payload: Json | None = Field(alias="requestPayload", default=None)


class TriggeredActionConfig(BaseModel):
    queue_job_action_input: QueueJobActionInput | None = Field(
        alias="queueJobActionInput", default=None
    )
    notification_action_input: NotificationActionInput | None = Field(
        alias="notificationActionInput", default=None
    )
    generic_webhook_action_input: GenericWebhookActionInput | None = Field(
        alias="genericWebhookActionInput", default=None
    )


class CreateFilterTriggerInput(BaseModel):
    name: str
    description: str | None = None
    triggering_event_type: EventTriggeringConditionType = Field(
        alias="triggeringEventType"
    )
    scope_type: TriggerScopeType = Field(alias="scopeType")
    scope_id: str = Field(alias="scopeID")
    event_filter: Json = Field(alias="eventFilter")
    triggered_action_type: TriggeredActionType = Field(alias="triggeredActionType")
    triggered_action_config: TriggeredActionConfig = Field(
        alias="triggeredActionConfig"
    )
    enabled: bool
    client_mutation_id: str | None = Field(alias="clientMutationId", default=None)


TriggeredActionConfig.model_rebuild()
CreateFilterTriggerInput.model_rebuild()
