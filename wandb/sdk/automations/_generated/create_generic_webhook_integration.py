# Generated by ariadne-codegen
# Source: tools/graphql_codegen/automations/

from __future__ import annotations

from typing import Literal

from pydantic import Field

from .base import GQLBase, Typename
from .fragments import GenericWebhookIntegrationFields


class CreateGenericWebhookIntegration(GQLBase):
    create_generic_webhook_integration: (
        CreateGenericWebhookIntegrationCreateGenericWebhookIntegration | None
    ) = Field(alias="createGenericWebhookIntegration")


class CreateGenericWebhookIntegrationCreateGenericWebhookIntegration(GQLBase):
    integration: (
        CreateGenericWebhookIntegrationCreateGenericWebhookIntegrationIntegrationIntegration
        | CreateGenericWebhookIntegrationCreateGenericWebhookIntegrationIntegrationGenericWebhookIntegration
    ) = Field(discriminator="typename__")


class CreateGenericWebhookIntegrationCreateGenericWebhookIntegrationIntegrationIntegration(
    GQLBase
):
    typename__: Typename[
        Literal["GitHubOAuthIntegration", "Integration", "SlackIntegration"]
    ]


class CreateGenericWebhookIntegrationCreateGenericWebhookIntegrationIntegrationGenericWebhookIntegration(
    GenericWebhookIntegrationFields
):
    typename__: Typename[Literal["GenericWebhookIntegration"]]


CreateGenericWebhookIntegration.model_rebuild()
CreateGenericWebhookIntegrationCreateGenericWebhookIntegration.model_rebuild()
