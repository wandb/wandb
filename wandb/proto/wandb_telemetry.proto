syntax = "proto3";

package wandb_internal;

import "wandb/proto/wandb_base.proto";

/*
 * Telemetry
 */
message TelemetryRecord {
  Imports imports_init = 1;
  Imports imports_finish = 2;
  Feature feature = 3;
  string  python_version = 4;
  string  cli_version = 5;
  string  huggingface_version = 6;
  // string  framework = 7;
  Env     env = 8;
  Labels  label = 9;
  Deprecated deprecated = 10;
  Issues issues = 11;
  _RecordInfo _info = 200;
}

message TelemetryResult {
}

message Imports {
  bool torch = 1;
  bool keras = 2;
  bool tensorflow = 3;
  bool fastai = 4;
  bool sklearn = 5;
  bool xgboost = 6;
  bool catboost = 7;
  bool lightgbm = 8;
  bool pytorch_lightning = 9;
  bool pytorch_ignite = 10;
  bool transformers_huggingface = 11;
  bool jax = 12;
  bool metaflow = 13;
  bool allennlp = 14;
  bool autogluon = 15;
  bool autokeras = 16;
  // bool avalanche = 17;
  bool catalyst = 18;
  // bool dalle_pytorch = 19;
  // bool datasets = 20;
  bool deepchem = 21;
  bool deepctr = 22;
  // bool deeppavlov = 23;
  // bool detectron = 24;
  // bool paddle = 25;
  // bool parlai = 26;
  // bool prophet = 27;
  bool pycaret = 28;
  bool pytorchvideo = 29;
  bool ray = 30;
  bool simpletransformers = 31;
  bool skorch = 32;
  bool spacy = 33;
  bool flash = 34;
  bool optuna = 35;
  bool recbole = 36;
  bool mmcv = 37; 
  bool mmdet = 38;
  bool torchdrug = 39;
  bool torchtext = 40;
  bool torchvision = 41;
  bool elegy = 42;
  bool detectron2 = 43;
  bool flair = 44;
  bool flax = 45;
  bool syft = 46;
  bool TTS = 47;
  bool monai = 48;
  bool huggingface_hub = 49;
  bool hydra = 50;
  bool datasets = 51;
  bool sacred = 52;
  bool joblib = 53;
  bool dask = 54;
  bool asyncio = 55;
}

message Feature {
  bool watch = 1;    // wandb.watch() called
  bool finish = 2;   // wandb.finish() called
  bool save = 3;     // wandb.save() called
  bool offline = 4;  // offline run was synced
  bool resumed = 5;  // run was resumed
  bool grpc = 6;     // grpc-server (java integration)
  bool metric = 7;   // define_metric() called
  bool keras = 8;    // Keras WandbCallback used
  bool sagemaker = 9; // User is using sagemaker
  bool artifact_incremental = 10; // Artifact(incremental=True) used
  bool metaflow = 11; // Using metaflow integration
  bool prodigy = 12; // Using prodigy integration
  bool set_init_name = 13; // users set run name from wandb.init
  bool set_init_id = 14; // users set run id from wandb.init
  bool set_init_tags = 15; //users set tags within wandb.init
  bool set_init_config = 16; // users set run config in wandb.init
  bool set_run_name = 17; // user sets run name via wandb.run.name = ...
  bool set_run_tags = 18; // user sets run name via wandb.run.tags = ...
  bool set_config_item = 19;  // users set key in run config via run.config.key or run.config["key"]
  bool launch = 20; // run is created through wandb launch
  bool torch_profiler_trace = 21; // wandb.profiler.torch_trace_handler() called
  bool sb3 = 22; // Using stable_baselines3 integration
  bool service = 23; // Using wandb service internal process
  bool init_return_run = 24; // wandb.init() called in the same process returning previous run
  bool lightgbm_wandb_callback = 25; // lightgbm callback used
  bool lightgbm_log_summary = 26; // lightgbm log summary used
  bool catboost_wandb_callback = 27; // catboost callback used
  bool catboost_log_summary = 28; // catboost log summary used
  bool tensorboard_log = 29; // wandb.tensorflow.log or wandb.tensorboard.log used
  bool estimator_hook = 30; // wandb.tensorflow.WandbHook used
  bool xgboost_wandb_callback = 31; // xgboost callback used
  bool xgboost_old_wandb_callback = 32; // xgboost old callback used (to be depreciated)
  bool attach = 33; // attach to a run in another process
  bool tensorboard_patch = 34; // wandb.tensorboard.patch(...)
  bool tensorboard_sync = 35; // wandb.init(sync_tensorboard=True)
  bool kfp_wandb_log = 36; // wandb.integration.kfp.wandb_log
}

message Env {
  bool jupyter = 1;  // jupyter env detected
  bool kaggle = 2;   // kaggle env detected
  bool windows = 3;  // windows detected
  bool m1_gpu = 4;   // apple silicon M1 gpu found
  bool start_spawn = 5;       // multiprocessing spawn
  bool start_fork = 6;        // multiprocessing fork
  bool start_forkserver = 7;  // multiprocessing forkserver
  bool start_thread = 8;      // thread start method
  bool maybe_mp = 9; // maybe user running multiprocessing
}

message Labels {
  string code_string = 1;   // code identification
  string repo_string = 2;   // repo identification
  string code_version = 3;  // code version
}

message Deprecated {
  bool keras_callback__data_type = 1; // wandb.keras.WandbCallback(data_type=...) called
  bool run__mode = 2; // wandb.run.mode called
  bool run__save_no_args = 3; // wandb.run.save() called without arguments
  bool run__join = 4; // wandb.run.join() called
  bool plots = 5; // wandb.plots.* called
  bool run__log_sync = 6; // wandb.run.log(sync=...) called
  bool init__config_include_keys = 7 ; // wandb.init(config_include_keys=...) called
  bool init__config_exclude_keys = 8 ; // wandb.init(config_exclude_keys=...) called
  bool keras_callback__save_model = 9; // wandb.keras.WandbCallback(save_model=True) called
}

message Issues {
  bool settings__validation_warnings = 1; // validation warnings for settings?
  bool settings__unexpected_args = 2; // unexpected settings init args?
  bool settings__preprocessing_warnings = 3; // preprocessing warnings for settings?
}
