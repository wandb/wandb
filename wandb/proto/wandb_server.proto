syntax = "proto3";

package wandb_internal;

import "wandb/proto/wandb_base.proto";
import "wandb/proto/wandb_internal.proto";
import "wandb/proto/wandb_telemetry.proto";

service InternalService {
  rpc RunUpdate(RunRecord) returns (RunUpdateResult) {}
  rpc Attach(AttachRequest) returns (AttachResponse) {}
  rpc TBSend(TBRecord) returns (TBResult) {}
  rpc RunStart(RunStartRequest) returns (RunStartResponse) {}
  rpc GetSummary(GetSummaryRequest) returns (GetSummaryResponse) {}
  rpc SampledHistory(SampledHistoryRequest) returns (SampledHistoryResponse) {}
  rpc PollExit(PollExitRequest) returns (PollExitResponse) {}
  rpc Shutdown(ShutdownRequest) returns (ShutdownResponse) {}
  rpc RunExit(RunExitRecord) returns (RunExitResult) {}
  rpc RunPreempting(RunPreemptingRecord) returns (RunPreemptingResult) {}
  rpc Metric(MetricRecord) returns (MetricResult) {}
  rpc Log(HistoryRecord) returns (HistoryResult) {}
  rpc Summary(SummaryRecord) returns (SummaryResult) {}
  rpc Config(ConfigRecord) returns (ConfigResult) {}
  rpc Files(FilesRecord) returns (FilesResult) {}
  rpc Output(OutputRecord) returns (OutputResult) {}
  rpc Telemetry(TelemetryRecord) returns (TelemetryResult) {}
  rpc Alert(AlertRecord) returns (AlertResult) {}
  rpc Artifact(ArtifactRecord) returns (ArtifactResult) {}

  // rpc messages for async operations: Send, Poll, Cancel, Release
  rpc ArtifactSend(ArtifactSendRequest) returns (ArtifactSendResponse) {}
  rpc ArtifactPoll(ArtifactPollRequest) returns (ArtifactPollResponse) {}
  // rpc ArtifactCancel(ArtifactCancelRequest) returns (ArtifactCancelResponse) {}
  // rpc ArtifactRelease(ArtifactReleaseRequest) returns (ArtifactReleaseResponse) {}

  rpc CheckVersion(CheckVersionRequest) returns (CheckVersionResponse) {}
  rpc Pause(PauseRequest) returns (PauseResponse) {}
  rpc Resume(ResumeRequest) returns (ResumeResponse) {}
  rpc Status(StatusRequest) returns (StatusResponse) {}
  rpc ServerShutdown(ServerShutdownRequest) returns (ServerShutdownResponse) {}
  rpc ServerStatus(ServerStatusRequest) returns (ServerStatusResponse) {}
  rpc ServerInformInit(ServerInformInitRequest) returns (ServerInformInitResponse) {}
  rpc ServerInformFinish(ServerInformFinishRequest) returns (ServerInformFinishResponse) {}
  rpc ServerInformAttach(ServerInformAttachRequest) returns (ServerInformAttachResponse) {}
  rpc ServerInformDetach(ServerInformDetachRequest) returns (ServerInformDetachResponse) {}
  rpc ServerInformTeardown(ServerInformTeardownRequest) returns (ServerInformTeardownResponse) {}
}

message ServerShutdownRequest {
  _RecordInfo _info = 200;
}

message ServerShutdownResponse {
}

message ServerStatusRequest {
  _RecordInfo _info = 200;
}

message ServerStatusResponse {
}

message StringTupleValue {
    repeated string string_values = 1;
}

message SettingsValue {
  oneof value_type {
    int64 int_value = 1;
    string string_value = 2;
    double float_value = 3;
    bool bool_value = 4;
    bool null_value = 5;
    StringTupleValue tuple_value = 6;
  }
}

message ServerInformInitRequest {
  map<string, SettingsValue> _settings_map = 50;
  _RecordInfo _info = 200;
}

message ServerInformInitResponse {
}

message ServerInformFinishRequest {
  _RecordInfo _info = 200;
}

message ServerInformFinishResponse {
}

message ServerInformAttachRequest {
  _RecordInfo _info = 200;
}

message ServerInformAttachResponse {
}

message ServerInformDetachRequest {
  _RecordInfo _info = 200;
}

message ServerInformDetachResponse {
}

message ServerInformTeardownRequest {
  int32 exit_code = 1;
  _RecordInfo _info = 200;
}

message ServerInformTeardownResponse {
}
