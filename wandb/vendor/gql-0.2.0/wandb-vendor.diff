diff --git a/wandb/vendor/gql-0.2.0/wandb_gql/client.py b/wandb/vendor/gql-0.2.0/wandb_gql/client.py
index 95c565c..ab3ed7f 100644
--- a/wandb/vendor/gql-0.2.0/wandb_gql/client.py
+++ b/wandb/vendor/gql-0.2.0/wandb_gql/client.py
@@ -1,7 +1,7 @@
 import logging
 
-from graphql import parse, introspection_query, build_ast_schema, build_client_schema
-from graphql.validation import validate
+from wandb_graphql import parse, introspection_query, build_ast_schema, build_client_schema
+from wandb_graphql.validation import validate
 
 from .transport.local_schema import LocalSchemaTransport
 
diff --git a/wandb/vendor/gql-0.2.0/wandb_gql/dsl.py b/wandb/vendor/gql-0.2.0/wandb_gql/dsl.py
index 135d808..052e1eb 100644
--- a/wandb/vendor/gql-0.2.0/wandb_gql/dsl.py
+++ b/wandb/vendor/gql-0.2.0/wandb_gql/dsl.py
@@ -1,11 +1,10 @@
-import collections
+from collections.abc import Iterable
 import decimal
 from functools import partial
 
-import six
-from graphql.language import ast
-from graphql.language.printer import print_ast
-from graphql.type import (GraphQLField, GraphQLList,
+from wandb_graphql.language import ast
+from wandb_graphql.language.printer import print_ast
+from wandb_graphql.type import (GraphQLField, GraphQLList,
                           GraphQLNonNull, GraphQLEnumType)
 
 from .utils import to_camel_case
@@ -61,7 +60,7 @@ def selections(*fields):
 def get_ast_value(value):
     if isinstance(value, ast.Node):
         return value
-    if isinstance(value, six.string_types):
+    if isinstance(value, str):
         return ast.StringValue(value=value)
     elif isinstance(value, bool):
         return ast.BooleanValue(value=value)
@@ -134,7 +133,7 @@ def query(*fields):
 
 
 def serialize_list(serializer, values):
-    assert isinstance(values, collections.Iterable), 'Expected iterable, received "{}"'.format(repr(values))
+    assert isinstance(values, Iterable), 'Expected iterable, received "{}"'.format(repr(values))
     return [serializer(v) for v in values]
 
 
diff --git a/wandb/vendor/gql-0.2.0/wandb_gql/gql.py b/wandb/vendor/gql-0.2.0/wandb_gql/gql.py
index 782943f..21edd39 100644
--- a/wandb/vendor/gql-0.2.0/wandb_gql/gql.py
+++ b/wandb/vendor/gql-0.2.0/wandb_gql/gql.py
@@ -1,10 +1,9 @@
-import six
-from graphql.language.parser import parse
-from graphql.language.source import Source
+from wandb_graphql.language.parser import parse
+from wandb_graphql.language.source import Source
 
 
 def gql(request_string):
-    if isinstance(request_string, six.string_types):
+    if isinstance(request_string, str):
         source = Source(request_string, 'GraphQL request')
         return parse(source)
     else:
diff --git a/wandb/vendor/gql-0.2.0/wandb_gql/transport/local_schema.py b/wandb/vendor/gql-0.2.0/wandb_gql/transport/local_schema.py
index 30d577e..5bc7d33 100644
--- a/wandb/vendor/gql-0.2.0/wandb_gql/transport/local_schema.py
+++ b/wandb/vendor/gql-0.2.0/wandb_gql/transport/local_schema.py
@@ -1,4 +1,4 @@
-from graphql.execution import execute
+from wandb_graphql.execution import execute
 
 
 class LocalSchemaTransport(object):
diff --git a/wandb/vendor/gql-0.2.0/wandb_gql/transport/requests.py b/wandb/vendor/gql-0.2.0/wandb_gql/transport/requests.py
index 71399a5..305ca8a 100644
--- a/wandb/vendor/gql-0.2.0/wandb_gql/transport/requests.py
+++ b/wandb/vendor/gql-0.2.0/wandb_gql/transport/requests.py
@@ -1,8 +1,8 @@
 from __future__ import absolute_import
 
 import requests
-from graphql.execution import ExecutionResult
-from graphql.language.printer import print_ast
+from wandb_graphql.execution import ExecutionResult
+from wandb_graphql.language.printer import print_ast
 
 from .http import HTTPTransport
 
