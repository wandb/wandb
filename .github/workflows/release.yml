name: Cut Release
run-name: cut sdk release triggered by ${{ github.actor }}

on:
  workflow_dispatch:
    inputs:
      bump-kind:
        type: choice
        required: true
        description: How to bump the current version
        default: "PATCH"
        options:
          - "MAJOR"
          - "MINOR"
          - "PATCH"
#      ref:
#        type: string
#        required: false
#        description: The git ref to use for the release
#        default: main

jobs:

  test-nightly:
    name: Run nightly tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout wandb/wandb
        uses: actions/checkout@v3
        with:
          repository: wandb/wandb
          path: wandb
      - uses: actions/setup-python@v4
        with:
          python-version: 3.9
      - name: Run nightly tests
        run: |
          cd wandb
          pip install -e .
          CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py --dryrun trigger-nightly
          # CIRCLECI_TOKEN=${{ secrets.MUMBOJUMBO_TOKEN }} python tools/circleci-tool.py trigger-nightly --wait

  prepare-release:
    name: Prepare Release
    environment: "release"
    if: always()
    needs:
      - test-nightly
    runs-on: ubuntu-latest
    outputs:
      release-version: ${{ steps.cz.outputs.release_version }}
      release-branch: ${{ steps.cz.outputs.release_branch }}
    steps:
      - name: Checkout main for current release
        uses: actions/checkout@v3
#        with:
#          ref: ${{ github.event.inputs.ref }}
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install python dependencies
        id: install-python-deps
        run: |
          python -m pip install --upgrade pip
          pip install commitizen -U
      - name: Setup git
        id: setup-git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git fetch --tags
      - name: Bump version and generate changelog entry with Commitizen (cz)
        id: cz
        run: |
          new_version="$(cz bump --increment ${{ github.event.inputs.bump-kind }} --yes --dry-run | grep bump | awk '{print $NF}')"
          echo "release_version=${new_version}" >> $GITHUB_OUTPUT
          echo "release_branch=release-${new_version}" >> $GITHUB_OUTPUT
          echo "release_tag=v${new_version}" >> $GITHUB_OUTPUT
          cz bump --increment ${{ github.event.inputs.bump-kind }} -ch --yes
      - name: Create release PR
        id: create-pr
        uses: peter-evans/create-pull-request@v4
        with:
          committer: GitHub <noreply@github.com>
          author: github-actions[bot] <github-actions[bot]@users.noreply.github.com>
          branch: ${{ steps.cz.outputs.release_branch }}
          delete-branch: true
          title: "chore(sdk): release ${{ steps.cz.outputs.release_version }} version"
          commit-message: "[create-pull-request] automated change of workflow ${{ github.run_id }} attempt ${{ github.run_number }}"
      - name: Create release notes
        uses: ncipollo/release-action@v1
        with:
          allowUpdates: true
          draft: false
          name: ${{ steps.cz.outputs.release_tag }}
          generateReleaseNotes: true
          tag: ${{ steps.cz.outputs.release_tag }}
          prerelease: false
          updateOnlyUnreleased: false
          commit: ${{ steps.cz.outputs.release_branch }}

  build-and-publish:
      name: Build and Publish
      environment: "release"
      runs-on: ubuntu-latest
      if: always()
      needs: prepare-release
      steps:
      - name: Checkout ${{ needs.prepare-release.outputs.release-branch }} for current release
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.prepare-release.outputs.release-branch }}
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Build
        run: |
          pip install wheel
          rm -rf dist build
          python setup.py sdist bdist_wheel
          ls -l dist
      - name: Publish
        run: |
          pip install twine
          twine upload --username=__token__ --password=${{ secrets.TEST_PYPI_TOKEN }} --repository testpypi dist/*
      - name: Test install
        run: |
          pip install --index-url https://test.pypi.org/simple/ --no-deps mumbojumbo
          version=`python -c "import mumbojumbo as mj; print(mj.__version__)"`
          if [ $version != ${{ needs.prepare-release.outputs.release-version }} ]; then
            echo "Version mismatch: $version != ${{ needs.prepare-release.outputs.release-version }}"
            exit 1
          fi

  post-release:
    name: Post Release Actions
    runs-on: ubuntu-latest
    needs:
      - build-and-publish
      - prepare-release
    if: always()
    steps:
      - name: Checkout ${{ needs.prepare-release.outputs.release-branch }} for current release
        uses: actions/checkout@v3
        with:
          ref: ${{ needs.prepare-release.outputs.release-branch }}
      - name: Setup python
        uses: actions/setup-python@v4
        with:
          python-version: '3.9'
      - name: Install python dependencies
        id: install-python-deps
        run: |
          echo ${{ needs.prepare-release.outputs.release-branch }}
          python -m pip install --upgrade pip
          pip install bump2version -U
      - name: Setup git
        id: setup-git
        run: |
          git config --global user.email "github-actions[bot]@users.noreply.github.com"
          git config --global user.name "github-actions[bot]"
          git fetch --tags
      - name: Bump version
        run: |
          bump2version patch --no-tag
          bump2version devkind --no-tag
          git push origin ${{ needs.prepare-release.outputs.release-branch }}
      - name: Nudge to merge the Release PR to main and unfreeze the release branch
        run: |
          echo "Please check and merge the release PR to main and unfreeze the main branch"
