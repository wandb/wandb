name: Build W&B SDK Core

on: [push, pull_request]

jobs:
  build_wheels:
    name: Build wheels on ${{ matrix.os }}
    runs-on: ${{ matrix.os }}
    timeout-minutes: 20
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, windows-2019, macos-11]

    steps:
      - uses: actions/checkout@v3

      - name: Set up QEMU
        if: runner.os == 'Linux'
        uses: docker/setup-qemu-action@v2
        with:
          platforms: all

      - name: Remove specific Go version
        if: runner.os == 'Windows'
        run: cmd /c "rmdir /s /q C:\hostedtoolcache\windows\go"

      - name: Install Go 1.21 on Windows
        if: runner.os == 'Windows'
        run: |
          choco upgrade golang
          echo "C:\Program Files\Go\bin" >> $env:GITHUB_PATH

      - name: Verify Go Version
        run: |
          go version
          gcc --version

      - name: Build wheels
        uses: pypa/cibuildwheel@v2.15.0
        with:
           package-dir: "nexus"
           output-dir: "nexus/wheelhouse"
        env:
          CIBW_ENVIRONMENT: PATH=$PATH:/usr/local/go/bin
          CIBW_BEFORE_ALL_LINUX: python nexus/scripts/build/install_go.py
          CIBW_BEFORE_ALL_MACOS: brew update && rm -f /usr/local/bin/go* && brew install go@1.21
          CIBW_BEFORE_BUILD_WINDOWS: refreshenv && set "GOROOT=C:\Program Files\Go" && set "PATH=%GOROOT%\bin;%PATH%"
          CIBW_BUILD: "{*x86_64,*arm64,*aarch64,*amd64}"
          CIBW_SKIP: cp36-* cp312-* pp* *musllinux*
          CIBW_ARCHS_LINUX: "x86_64 aarch64"
          CIBW_ARCHS_MACOS: "x86_64 arm64"
          CIBW_BUILD_VERBOSITY: 3

# todo: build sdist
#      - name: Build sdist
#        if: runner.os == 'Linux'
#        run: |
#          python -m pip install --upgrade build
#          python -m build --sdist nexus
#
#      - uses: actions/upload-artifact@v3
#        if: runner.os == 'Linux'
#        with:
#          path: ./nexus/dist/*.tar.gz

      - uses: actions/upload-artifact@v3
        with:
          path: ./nexus/wheelhouse/*.whl

  publish:
    name: Publish to PyPI
    needs: build_wheels
    runs-on: ubuntu-latest

#    environment:
#      name: testpypi
#      url: https://test.pypi.org/p/wandb-core
#
#    permissions:
#      id-token: write  # IMPORTANT: mandatory for trusted publishing

    steps:
      - name: Download all the wheels
        uses: actions/download-artifact@v3
        with:
          name: python-package-distributions
          path: nexus/wheelhouse/
      - name: Publish distribution to TestPyPI
        run: ls -l nexus/wheelhouse

#        uses: pypa/gh-action-pypi-publish@release/v1
#        with:
#          repository-url: https://test.pypi.org/legacy/
