version: 2.1

orbs:
  win: circleci/windows@2.4.0

commands:
  save-tox-cache:
    description: "Save tox environment to cache"
    steps:
      - save_cache:
            paths:
                - ./.tox
            key: v0.6-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
  restore-tox-cache:
    description: "Restore tox environment from cache"
    steps:
      - restore_cache:
              keys:
              - v0.6-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
              - v0.6-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-
              - v0.6-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-
              - v0.6-toxenv-master-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
              - v0.6-toxenv-master-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-
              - v0.6-toxenv-master-{{ .Environment.CIRCLE_JOB }}-

workflows:
  main:
    jobs:
      - test:
         name: "Linters"
         image: "python:3.6"
         toxenv: "codemodcheck,mypy,black,flake8"
      - test:
         name: "Python 2.7"
         image: "python:2.7"
         toxenv: "py27,covercircle"
      - test:
         name: "Python 3.6"
         image: "python:3.6"
         toxenv: "py36,covercircle"
      - test:
         name: "Python 3.7"
         image: "python:3.7"
         toxenv: "py37"
      - test:
         name: "Python 3.8"
         image: "python:3.8"
         toxenv: "py38"
      - test:
         name: "Python 3.9"
         image: "python:3.9"
         toxenv: "py39"
      - win:
         name: "Windows (Python 3.7)"
      - mac:
         name: "MacOS (Python 3.7)"
      - final:
         name: "Upload Coverage"
         requires:
            - "Python 2.7"
            - "Python 3.6"

jobs:
    test:
        parameters:
            image:
              type: string
            toxenv:
              type: string
        docker:
            - image: << parameters.image >>
        working_directory: /mnt/ramdisk
        steps:
            - checkout
            - run:
                  name: Install system deps
                  command: apt-get update && apt-get install -y libsndfile1 ffmpeg
            - run:
                  name: Install python dependencies
                  command: |
                      pip install tox
            - restore-tox-cache
            - run:
                  name: Run tests
                  command: |
                      tox -vv -e << parameters.toxenv >>
                  no_output_timeout: 10m
            - save-tox-cache
    win:
        executor: win/default
        steps:
            - checkout
            - run:
                  name: Install python dependencies
                  command: |
                      pip install tox
            - restore-tox-cache
            - run:
                  name: Temporary conda hack
                  shell: bash.exe
                  command: |
                      cp /c/tools/miniconda3/python* /c/tools/miniconda3/lib/venv/scripts/nt/
            - run:
                  name: Run tests
                  shell: bash.exe
                  command: |
                      tox -vv -e py37
                  no_output_timeout: 10m
            - save-tox-cache

    mac:
        macos:
            xcode: 11.4.1
        steps:
            - checkout
            - run:
                  name: Install python dependencies
                  command: |
                      pip3 install tox
            - restore-tox-cache
            - run:
                  name: Run tests
                  # Tests failed with Too many open files, so added ulimit
                  command: |
                      ulimit -n 1024
                      python3 -m tox -vv -e py37
                  no_output_timeout: 10m
            - save-tox-cache
    final:
        docker:
            - image: python:3.7
        steps:
            - run:
                  name: Call coveralls webhook
                  command: |
                      curl -k https://coveralls.io/webhook?repo_token=$COVERALLS_REPO_TOKEN -d "payload[build_num]=$CIRCLE_WORKFLOW_ID&payload[status]=done"
