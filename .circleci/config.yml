version: 2.1

orbs:
  win: circleci/windows@2.4.0

parameters:
  manual:
    type: boolean
    default: false
  manual_test:
    type: boolean
    default: false
  manual_win:
    type: boolean
    default: false
  manual_mac:
    type: boolean
    default: false
  manual_test_image:
    type: string
    default: "python:3.7"
  manual_test_toxenv:
    type: string
    default: "py37"
  manual_win_toxenv:
    type: string
    default: "py37"
  manual_mac_toxenv:
    type: string
    default: "py37"
  manual_test_name:
    type: string
    default: "man-lin-py37"
  manual_win_name:
    type: string
    default: "man-win-py37"
  manual_mac_name:
    type: string
    default: "man-mac-py37"

commands:
  save-tox-cache:
    description: "Save tox environment to cache"
    steps:
      - unless:
          condition: << pipeline.parameters.manual >>
          steps:
            - save_cache:
                paths:
                  - ./.tox
                key: v0.24-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
  restore-tox-cache:
    description: "Restore tox environment from cache"
    steps:
      - restore_cache:
              keys:
              - v0.24-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
              - v0.24-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-
              - v0.24-toxenv-{{ .Environment.CIRCLE_BRANCH }}-{{ .Environment.CIRCLE_JOB }}-
              - v0.24-toxenv-master-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-{{ checksum "setup.py" }}-{{ checksum "requirements.txt" }}-{{ checksum "requirements_dev.txt" }}
              - v0.24-toxenv-master-{{ .Environment.CIRCLE_JOB }}-{{ checksum "tox.ini" }}-
              - v0.24-toxenv-master-{{ .Environment.CIRCLE_JOB }}-
  save-test-results:
    description: "Save test results"
    steps:
      - unless:
          condition: << pipeline.parameters.manual >>
          steps:
            - store_test_results:
                path: test-results
            - store_artifacts:
                path: test-results
            - store_artifacts:
                path: mypy-results
            - store_artifacts:
                path: cover-results

workflows:
  main:
    unless: << pipeline.parameters.manual >>
    jobs:
      - test:
         name: "code-check"
         image: "python:3.6"
         toxenv: "protocheck,mypy,black,flake8,flake8-docstrings"
# Disable python2.7 for good?
#      - test:
#         name: "Python 2.7"
#         image: "python:2.7"
#         toxenv: "py27"
# Disable python3.5 for now
#      - test:
#         name: "Python 3.5"
#         image: "python:3.5"
#         toxenv: "py35"
      - test:
         name: "lin-py36"
         image: "python:3.6"
         toxenv: "py36,covercircle"
      - test:
         name: "lin-py37"
         image: "python:3.7"
         toxenv: "py37"
      - test:
         name: "lin-py38"
         image: "python:3.8"
         toxenv: "py38"
      - test:
         name: "lin-py39"
         image: "python:3.9"
         toxenv: "py39"
      - test:
         name: "func-s_base-lin-py37"
         image: "python:3.7"
         toxenv: "func-s_base-py37,func-covercircle"
      - test:
         name: "func-s_tf115-lin-py37"
         image: "python:3.7"
         toxenv: "func-s_tf115-py37,func-covercircle"
      - test:
         name: "func-s_tf21-lin-py37"
         image: "python:3.7"
         toxenv: "func-s_tf21-py37,func-covercircle"
      - test:
         name: "func-s_tf25-lin-py37"
         image: "python:3.7"
         toxenv: "func-s_tf25-py37,func-covercircle"
      - win:
         name: "win-py37"
         toxenv: "py37,wincovercircle"
      - mac:
         name: "mac-py37"
         toxenv: "py37"
      - launch:
         name: "wandb launch tests"
         toxenv: "pylaunch,covercircle"
  manual_test:
    when: << pipeline.parameters.manual_test >>
    jobs:
      - test:
         name: << pipeline.parameters.manual_test_name >>
         image: << pipeline.parameters.manual_test_image >>
         toxenv: << pipeline.parameters.manual_test_toxenv >>
  manual_win:
    when: << pipeline.parameters.manual_win >>
    jobs:
      - win:
         name: << pipeline.parameters.manual_win_name >>
         toxenv: << pipeline.parameters.manual_win_toxenv >>
  manual_mac:
    when: << pipeline.parameters.manual_mac >>
    jobs:
      - mac:
         name: << pipeline.parameters.manual_mac_name >>
         toxenv: << pipeline.parameters.manual_mac_toxenv >>

jobs:
    test:
        resource_class: xlarge
        parameters:
            image:
              type: string
            toxenv:
              type: string
        docker:
            - image: << parameters.image >>
        working_directory: /mnt/ramdisk
        steps:
            - checkout
            - run:
                  name: Install system deps
                  command: apt-get update && apt-get install -y libsndfile1 ffmpeg
            - run:
                  name: Install python dependencies
                  command: |
                      pip install tox==3.24.0
            - restore-tox-cache
            - run:
                  name: Run tests
                  command: |
                      tox -v -e << parameters.toxenv >>
                  no_output_timeout: 10m
            - save-tox-cache
            - save-test-results
    win:
        parameters:
            toxenv:
              type: string
        executor: win/default
        parallelism: 4
        steps:
            - checkout
            - run:
                  name: Install python dependencies
                  command: |
                      pip install tox==3.24.0
            - restore-tox-cache
            - run:
                  name: Temporary conda hack
                  shell: bash.exe
                  command: |
                      cp /c/tools/miniconda3/python* /c/tools/miniconda3/lib/venv/scripts/nt/
            - run:
                  name: Run tests
                  shell: bash.exe
                  command: |
                      CI_PYTEST_PARALLEL=3 CI_PYTEST_SPLIT_ARGS="--splits $CIRCLE_NODE_TOTAL --group $(( $CIRCLE_NODE_INDEX + 1 ))" tox -v -e << parameters.toxenv >>
                  no_output_timeout: 10m
            - save-tox-cache
            - save-test-results
    mac:
        # TODO: how to set resource class?
        parameters:
            toxenv:
              type: string
        macos:
            xcode: 11.4.1
        parallelism: 4
        steps:
            - checkout
            - run:
                  name: Install python dependencies
                  command: |
                      pip3 install tox==3.24.0
            - restore-tox-cache
            - run:
                  name: Run tests
                  # Tests failed with Too many open files, so added ulimit
                  command: |
                      ulimit -n 4096
                      CI_PYTEST_PARALLEL=3 CI_PYTEST_SPLIT_ARGS="--splits $CIRCLE_NODE_TOTAL --group $(( $CIRCLE_NODE_INDEX + 1 ))" python3 -m tox -v -e << parameters.toxenv >>
                  no_output_timeout: 10m
            - save-tox-cache
            - save-test-results

    launch:
      parameters:
        toxenv:
          type: string
      machine:
          image: ubuntu-2004:202104-01
          docker_layer_caching: true
      resource_class: large
      steps:
        - attach_workspace:
                  at: .
        - checkout
        - run:
            name: Install python dependencies, build r2d
            command: |
                pip3 install tox
                pip3 install chardet
                pip3 install iso8601
                pip3 install jupyter-repo2docker
                jupyter-repo2docker --no-run ./tests/fixtures/
        - restore-tox-cache
        - run:
            name: Run tests
            command: |
                python3 -m tox -vv -e << parameters.toxenv >>
            no_output_timeout: 10m
        - save-tox-cache
        - save-test-results
            
