// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package stream

import (
	"github.com/google/wire"
	"github.com/wandb/wandb/core/internal/observability"
	"github.com/wandb/wandb/core/internal/runwork"
	"github.com/wandb/wandb/core/internal/wboperation"
)

// Injectors from streaminject.go:

// InjectStream returns a new Stream.
func InjectStream(params StreamParams) *Stream {
	settings := params.Settings
	streamStreamLoggerFile := openStreamLoggerFile(settings)
	client := params.Sentry
	level := params.LogLevel
	coreLogger := streamLogger(streamStreamLoggerFile, settings, client, level)
	wandbOperations := wboperation.NewOperations()
	runWork := provideStreamRunWork(coreLogger)
	stream := NewStream(params, streamStreamLoggerFile, coreLogger, wandbOperations, runWork)
	return stream
}

// streaminject.go:

var streamProviders = wire.NewSet(
	NewStream, wire.FieldsOf(
		new(StreamParams),
		"Settings",
		"Sentry",
		"LogLevel",
	), provideStreamRunWork,
	streamLoggerProviders, wboperation.NewOperations,
)

func provideStreamRunWork(logger *observability.CoreLogger) runwork.RunWork {
	return runwork.New(BufferSize, logger)
}
