// Code generated by "stringer -type=PrimitiveType -linecomment -output=primitive_type_stringer.go"; DO NOT EDIT.

package variant

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[PrimitiveInvalid - -1]
	_ = x[PrimitiveNull-0]
	_ = x[PrimitiveBoolTrue-1]
	_ = x[PrimitiveBoolFalse-2]
	_ = x[PrimitiveInt8-3]
	_ = x[PrimitiveInt16-4]
	_ = x[PrimitiveInt32-5]
	_ = x[PrimitiveInt64-6]
	_ = x[PrimitiveDouble-7]
	_ = x[PrimitiveDecimal4-8]
	_ = x[PrimitiveDecimal8-9]
	_ = x[PrimitiveDecimal16-10]
	_ = x[PrimitiveDate-11]
	_ = x[PrimitiveTimestampMicros-12]
	_ = x[PrimitiveTimestampMicrosNTZ-13]
	_ = x[PrimitiveFloat-14]
	_ = x[PrimitiveBinary-15]
	_ = x[PrimitiveString-16]
	_ = x[PrimitiveTimeMicrosNTZ-17]
	_ = x[PrimitiveTimestampNanos-18]
	_ = x[PrimitiveTimestampNanosNTZ-19]
	_ = x[PrimitiveUUID-20]
}

const _PrimitiveType_name = "UnknownNullBoolTrueBoolFalseInt8Int16Int32Int64DoubleDecimal32Decimal64Decimal128DateTimestamp(micros)TimestampNTZ(micros)FloatBinaryStringTimeNTZ(micros)Timestamp(nanos)TimestampNTZ(nanos)UUID"

var _PrimitiveType_index = [...]uint8{0, 7, 11, 19, 28, 32, 37, 42, 47, 53, 62, 71, 81, 85, 102, 122, 127, 133, 139, 154, 170, 189, 193}

func (i PrimitiveType) String() string {
	i -= -1
	if i < 0 || i >= PrimitiveType(len(_PrimitiveType_index)-1) {
		return "PrimitiveType(" + strconv.FormatInt(int64(i+-1), 10) + ")"
	}
	return _PrimitiveType_name[_PrimitiveType_index[i]:_PrimitiveType_index[i+1]]
}
