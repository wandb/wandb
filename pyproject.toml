[build-system]
build-backend = "poetry.core.masonry.api"
requires = ["poetry-core"]

[tool.black]
exclude = '''
wandb/vendor/
| wandb/bin/
| wandb/proto/
| wandb/proto_check/
| wandb/sdk/launch/deploys/
| wandb/run*
| wandb/offline-run*
| __pycache__
| .pyc
| .tox/
'''
include = '\.pyi?$'
line-length = 88

[tool.isort]
extend_skip_glob = ["wandb/proto/**", "wandb/vendor/**"]
profile = "black"
skip = ["wandb/__init__.py"]
skip_gitignore = "True"

[tool.poetry]
authors = ["Weights & Biases <support@wandb.com>"]
classifiers = [
  "Development Status :: 5 - Production/Stable",
  "Intended Audience :: Developers",
  "Intended Audience :: Science/Research",
  "License :: OSI Approved :: MIT License",
  "Natural Language :: English",
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.6",
  "Programming Language :: Python :: 3.7",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Logging",
  "Topic :: System :: Monitoring"
]
description = "A CLI and library for interacting with the Weights and Biases API."
documentation = "https://docs.wandb.ai/"
homepage = "https://wandb.ai/site"
license = "MIT"
name = "wandb"
readme = "package_readme.md"
repository = "https://github.com/wandb/wandb"
version = "0.13.10.dev1"

[tool.poetry.dependencies]
python = "^3.6.2"
appdirs = "^1.4.3"
aws = {version = "^0.2.5", optional = true}
azure-storage-blob = {version = "~12.13.1", optional = true}
bokeh = {optional = true, version = "~2.3.3"}
boto3 = {version = "~1.23.1", optional = true}
botocore = {optional = true, version = "~1.26.10"}
chardet = {optional = true, version = "~5.0.0"}
click = "~8.0.4"
cloudpickle = {optional = true, version = "^2.2.1"}
dataclasses = {python = "<3.7", version = "^0.8"}
docker-pycreds = "^0.4.0"
gitpython = "~3.1.18"
google-cloud-storage = {optional = true, version = "~2.0.0"}
grpcio = {optional = true, version = "^1.27.2"}
iso8601 = {optional = true, version = "^1.1.0"}
kubernetes = {optional = true, version = "^25.3.0"}
minio = {optional = true, version = "^7.1.13"}
moviepy = {optional = true, version = "^1.0.3"}
nbconvert = {optional = true, version = "~6.0.7"}
nbformat = {optional = true, version = "~5.1.3"}
numpy = {optional = true, version = "~1.19.5"}
pathtools = "^0.1.2"
pillow = {optional = true, version = "^8.4.0"}
plotly = {optional = true, version = "^5.13.0"}
protobuf = "~3.19.0"
psutil = "^5.0.0"
pyyaml = "^6.0"
rdkit = {optional = true, version = ">=2022.3.3", markers = "(platform_machine == 'arm64' and python_version >= '3.7') or python_version >= '3.8'"}
rdkit-pypi = {optional = true, version = ">=2021.9.4", markers = "platform_machine != 'arm64' and python_version < '3.8'"}
requests = "~2.27.1"
sentry-sdk = "^1.14.0"
setproctitle = "~1.2.3"
setuptools = "~59.6.0"
sh = {optional = true, version = "^1.14.3"}
soundfile = {optional = true, version = "^0.11.0"}
sweeps = {optional = true, version = "^0.2.0"}
typing-extensions = {python = '<3.10', version = "^4.1.1"}

[tool.poetry.extras]
all = [
  "aws",
  "azure",
  "gcp",
  "grpc",
  "kubeflow",
  "launch",
  "media",
  "models",
  "service",
  "sweeps"
]
aws = ["boto3"]
azure = ["azure-storage-blob"]
gcp = ["google-cloud-storage"]
grpc = ["grpcio"]
kubeflow = ["google-cloud-storage", "kubernetes", "minio", "sh"]
launch = [
  "boto3",
  "botocore",
  "chardet",
  "google-cloud-storage",
  "iso8601",
  "kubernetes",
  "nbconvert",
  "nbformat",
  "typing_extensions"
]
media = [
  "bokeh",
  "moviepy",
  "numpy",
  "pillow",
  "plotly",
  "rdkit",
  "rdkit-pypi",
  "soundfile"
]
models = ["cloudpickle"]
service = []
sweeps = ["sweeps"]

[tool.poetry.group.build.dependencies]
bump2version = "^1.0.1"
bumpversion = "^0.6.0"
libcst = "~0.4.1"
twine = "~3.8.0"

[tool.poetry.group.coverage.dependencies]
codecov = "^2.1.12"
coverage = {extras = ["toml"], version = "~6.2" }
pycobertura = "~2.1.0"
pytest-cov = "~4.0.0"

[tool.poetry.group.dev.dependencies]
google-cloud-aiplatform = {version = "^1.4.3", python = ">=3.7"}
imageio = "~2.15.0"
ipykernel = "~5.5.6"
ipython = "~7.16.3"
matplotlib = "~3.3.4"  # or !=3.5.2
nbclient = "~0.5.9"
pandas = "~1.1.5"
scipy = "~1.5.4"
scikit-learn = "~0.24.2"

[tool.poetry.group.lint.dependencies]
black = {extras = ["jupyter"], version = "~22.8.0"}
darglint = "^1.8.0"
flake8 = "~5.0.4"
flake8-bugbear = "~22.9.23"
flake8-docstrings = "~1.6.0"
flake8-fixme = "^1.1.1"
flake8-typing-imports = "~1.12.0"
isort = "~5.10.1"
pep8-naming = "0.13.1"
pylint = "~2.13.9"

[tool.poetry.group.protobuf]
optional = true

[tool.poetry.group.protobuf.dependencies]
grpcio = {version = "^1.48.2", python = ">=3.7"}
grpcio-tools = {version = "^1.48.2", python = ">=3.7"}
mypy-protobuf = {version = "^3.3.0", python = ">=3.7"}

[tool.poetry.group.test.dependencies]
hypothesis = "~6.31.6"
mock = ">=2.0.0"
moto = {extras = ["s3"], version = "~4.0.13" }
parameterized = "^0.8.1"
pytest = "~7.0.1"
pytest-flakefinder = "^1.1.0"
pytest-flask = "^1.2.0"
pytest-mock = "~3.6.1"
pytest-openfiles = "^0.5.0"
pytest-rerunfailures = "~10.3"
pytest-timeout = "^2.1.0"
pytest-xdist = "~3.0.2"

[tool.poetry.group.typing.dependencies]
lxml = "^4.9.2"
mypy = "^0.971"
types-click = "^7.1.8"

[tool.poetry.scripts]
wandb = "wandb.cli.cli:cli"
wb = "wandb.cli.cli:cli"
