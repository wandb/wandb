fragment ArtifactCollectionFragment on ArtifactCollection {
  __typename
  id
  name
  description
  createdAt
  tags {
    edges {
      node {
        ...TagFragment
      }
    }
  }
  aliases(after: $aliasesCursor, first: $aliasesPerPage) @include(if: $includeAliases) {
    edges {
      node {
        ...ArtifactAliasFragment
      }
    }
  }
}

# A smaller fragment on ArtifactCollection that only includes minimal descriptive fields.
fragment ArtifactCollectionSummary on ArtifactCollection {
  __typename
  id
  name
  description
  createdAt
}

mutation DeleteArtifactSequence($id: ID!) {
  deleteArtifactSequence(input: { artifactSequenceID: $id }) {
    artifactCollection {
      __typename
      state
    }
  }
}

mutation DeleteArtifactPortfolio($id: ID!) {
  deleteArtifactPortfolio(input: { artifactPortfolioID: $id }) {
    artifactCollection {
      __typename
      state
    }
  }
}

mutation UpdateArtifactSequence($input: UpdateArtifactSequenceInput!) {
  updateArtifactSequence(input: $input) {
    artifactCollection {
      ...ArtifactCollectionSummary
    }
  }
}

mutation UpdateArtifactPortfolio($input: UpdateArtifactPortfolioInput!) {
  updateArtifactPortfolio(input: $input) {
    artifactCollection {
      ...ArtifactCollectionSummary
    }
  }
}

mutation MoveArtifactCollection($input: MoveArtifactSequenceInput!) {
  moveArtifactSequence(input: $input) {
    artifactCollection {
      ...ArtifactCollectionSummary
    }
  }
}

mutation CreateArtifactCollectionTagAssignments(
  $input: CreateArtifactCollectionTagAssignmentsInput!
) {
  createArtifactCollectionTagAssignments(input: $input) {
    tags {
      ...TagFragment
    }
  }
}

mutation DeleteArtifactCollectionTagAssignments(
  $input: DeleteArtifactCollectionTagAssignmentsInput!
) {
  deleteArtifactCollectionTagAssignments(input: $input) {
    success
  }
}

fragment ArtifactCollectionConnectionFragment on ArtifactCollectionConnection {
  totalCount
  pageInfo {
    ...PageInfoFragment
  }
  edges {
    node {
      ...ArtifactCollectionFragment
    }
  }
}

query ProjectArtifactCollections(
  $entityName: String!
  $projectName: String!
  $artifactTypeName: String!
  $cursor: String
  $aliasesCursor: String
  $aliasesPerPage: Int = 0
  $includeAliases: Boolean = false
) {
  project(name: $projectName, entityName: $entityName) {
    artifactType(name: $artifactTypeName) {
      # NOTE: The node being aliased is named:
      # - `artifactCollections` for new servers
      # - `artifactSequences` for old servers
      artifactCollections: artifactCollections(after: $cursor) {
        ...ArtifactCollectionConnectionFragment
      }
    }
  }
}

query ProjectArtifactCollection(
  $entityName: String!
  $projectName: String!
  $artifactTypeName: String!
  $artifactCollectionName: String!
  $aliasesCursor: String
  $aliasesPerPage: Int = 1000
  $includeAliases: Boolean = true
) {
  project(name: $projectName, entityName: $entityName) {
    artifactType(name: $artifactTypeName) {
      # NOTE: The node being aliased is named:
      # - `artifactCollection` for new servers
      # - `artifactSequence` for old servers
      artifactCollection: artifactCollection(name: $artifactCollectionName) {
        ...ArtifactCollectionFragment
      }
    }
  }
}

fragment ArtifactPortfolioTypeFields on ArtifactPortfolio {
  __typename
  id
  name
}

fragment ArtifactSequenceTypeFields on ArtifactSequence {
  __typename
  id
  name
}
