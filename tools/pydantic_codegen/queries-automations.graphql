fragment SlackIntegration on SlackIntegration {
    __typename
    id
    teamName
    channelName
}
fragment WebhookIntegration on GenericWebhookIntegration {
    __typename
    id
    name
    urlEndpoint
    secretRef
    accessTokenRef
    createdAt
}
fragment GithubIntegration on GitHubOAuthIntegration {
    __typename
    id
}

# ------------------------------------------------------------------------------
fragment ArtifactSequenceScope on ArtifactSequence {
    __typename
    id
    name
}
fragment ArtifactPortfolioScope on ArtifactPortfolio {
    __typename
    id
    name
}
fragment ProjectScope on Project {
    __typename
    id
    name
}

# ------------------------------------------------------------------------------
fragment FilterEventTriggeringCondition on FilterEventTriggeringCondition {
    eventType
    filter
}

# ------------------------------------------------------------------------------
fragment RunQueue on RunQueue {
    id
    name
}
fragment QueueJobAction on QueueJobTriggeredAction {
    __typename
    template
    queue {...RunQueue}
}
fragment NotificationAction on NotificationTriggeredAction {
    __typename
    title
    message
    severity
    integration {...SlackIntegration}
}
fragment WebhookAction on GenericWebhookTriggeredAction {
    __typename
    requestPayload
    integration {...WebhookIntegration}
}

# ------------------------------------------------------------------------------
fragment UserInfo on User {
    id
    username
}

fragment Trigger on Trigger {
    id
    createdAt
    createdBy {...UserInfo}
    updatedAt
    name
    description
    enabled
    scope {
        __typename
        ...ProjectScope
        ...ArtifactPortfolioScope
        ...ArtifactSequenceScope
    }
    event: triggeringCondition {
        __typename
        ...FilterEventTriggeringCondition
    }
    action: triggeredAction {
        __typename
        ...QueueJobAction
        ...NotificationAction
        ...WebhookAction
    }
}

# ------------------------------------------------------------------------------
fragment PageInfo on PageInfo {
    endCursor
    hasNextPage
}

# ------------------------------------------------------------------------------
fragment PaginatedProjectTriggers on ProjectConnection {
    pageInfo {...PageInfo}
    edges {
        cursor
        node {
            triggers {...Trigger}
        }
    }
}

query TriggersInUserOrgEntity ($entityName: String, $cursor: String, $perPage: Int) {
    viewer(entityName: $entityName) {
        organizations {
            orgEntity {
                projects(after: $cursor, first: $perPage) {...PaginatedProjectTriggers}
            }
        }
    }
}

query TriggersInUserTeams ($entityName: String, $cursor: String, $perPage: Int) {
    viewer(entityName: $entityName) {
        organizations {
            teams {
                projects(after: $cursor, first: $perPage) {...PaginatedProjectTriggers}
            }
        }
    }
}


# ------------------------------------------------------------------------------
fragment CreateFilterTriggerResult on CreateFilterTriggerPayload {
    __typename
    trigger {...Trigger}
    clientMutationId
}
mutation CreateFilterTrigger($params: CreateFilterTriggerInput!) {
    createFilterTrigger(input: $params) {
        ...CreateFilterTriggerResult
    }
}

# ------------------------------------------------------------------------------
fragment DeleteTriggerResult on DeleteTriggerPayload {
    __typename
    success
    clientMutationId
}
mutation DeleteTrigger($id: ID!) {
    deleteTrigger(input: {triggerID: $id}) {
        ...DeleteTriggerResult
    }
}

# ------------------------------------------------------------------------------
fragment PaginatedIntegrations on IntegrationConnection {
    pageInfo {...PageInfo}
    edges {
        cursor
        node {
            ...SlackIntegration
        }
    }
}

query SlackIntegrationsForUser($cursor: String, $perPage: Int) {
    viewer {
        userEntity {
            integrations(after: $cursor, first: $perPage) {...PaginatedIntegrations}
        }
    }
}

query SlackIntegrationsForTeam($entityName: String, $cursor: String, $perPage: Int) {
    entity(name: $entityName) {
        integrations(after: $cursor, first: $perPage) {...PaginatedIntegrations}
    }
}
